
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftENDleftPLUSMINUSleftTIMESDIVIDEAND ATTR AVAL BODY BOOL CLSS COLON COMMA COMMENT DIVIDE DOT END ID IMPORT LARRAY LDICT LPAREN MINUS NAME NEWLINE NONE NOT NUM_BIN NUM_FLOAT NUM_HEX NUM_IMAG NUM_INT NUM_OCT OR PLUS RARRAY RDICT RPAREN STRING STRING_CONTINUE STRING_CONTINUE_NEWLINE STRING_END STRING_START_SINGLEQ1 STRING_START_SINGLEQ2 STRING_START_TRIPLEQ1 STRING_START_TRIPLEQ2 TERM TIMES UNIT WS\n        master    : master block\n                  | block\n        \n        block   : CLSS NAME blockcontent END\n                | CLSS blockcontent END\n                | CLSS NAME END\n                | CLSS END\n        \n        blockcontent    : blockcontent attr\n                        | blockcontent block\n                        | attr\n                        | block\n        attr     : ATTR expr\n                    | BODY\n         expr    : expr PLUS term\n                    | expr MINUS term\n                    | term\n            term    : term TIMES factor\n                    | term DIVIDE factor\n                    | term TIMES TIMES factor\n                    | term DIVIDE DIVIDE factor\n                    | factor\n        factor : NUM_INT\n                  | NUM_FLOAT\n                  | NUM_HEX\n                  | NUM_OCT\n                  | NUM_IMAG\n                  | NUM_BIN\n                  | PLUS factor\n                  | MINUS factor\n        factor : LPAREN expr RPAREN\n        factor : STRING\n        factor : BOOL\n        factor : NONE\n        factor : identifier\n                  | func\n        func   : ID LPAREN funcargs RPAREN\n                  | ID LPAREN RPAREN\n        funcargs : funcargs COMMA expr\n                    | expr\n        identifier : factor DOT func\n                      | identifier DOT func\n        identifier : identifier DOT ID\n                      | factor DOT ID\n                      | func\n                      | ID\n        identifier : identifier LARRAY expr RARRAY\n        arraydata : arraydata COMMA expr\n                     | expr\n        factor : LARRAY arraydata RARRAY\n                  | LARRAY arraydata COMMA RARRAY\n                  | LARRAY RARRAY\n        dictdata : dictdata COMMA dictcouple\n                    | dictcouple\n        expr : NOT expr\n        dictdata : dict\n        dictcouple : expr COLON expr\n        dict   : LDICT dictdata RDICT\n                  | LDICT dictdata COMMA RDICT\n                  | LDICT RDICT\n        factor : dict\n        '
    
_lr_action_items = {'CLSS':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,39,42,45,46,52,56,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[3,3,-2,3,-1,3,3,-6,-9,-10,-12,3,-5,-4,-7,-8,-11,-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-3,-27,-28,-53,-50,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'$end':([1,2,4,7,13,14,39,],[0,-2,-1,-6,-5,-4,-3,]),'NAME':([3,],[5,]),'END':([3,5,6,7,8,9,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,39,42,45,46,52,56,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[7,13,14,-6,-9,-10,-12,39,-5,-4,-7,-8,-11,-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-3,-27,-28,-53,-50,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'ATTR':([3,5,6,7,8,9,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,39,42,45,46,52,56,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[10,10,10,-6,-9,-10,-12,10,-5,-4,-7,-8,-11,-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-3,-27,-28,-53,-50,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'BODY':([3,5,6,7,8,9,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,39,42,45,46,52,56,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[11,11,11,-6,-9,-10,-12,11,-5,-4,-7,-8,-11,-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-3,-27,-28,-53,-50,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'NOT':([10,21,29,35,38,50,54,73,78,79,86,],[21,21,21,21,21,21,21,21,21,21,21,]),'NUM_INT':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NUM_FLOAT':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NUM_HEX':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'NUM_OCT':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NUM_IMAG':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'NUM_BIN':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'PLUS':([10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,50,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,],[18,40,18,-15,18,18,-20,-21,-22,-23,-24,-25,-26,18,-30,-31,-32,-33,-34,18,-59,-44,18,18,18,-27,18,18,-28,40,40,18,-50,40,18,-58,-59,40,-13,-14,18,-16,18,-17,-39,-42,-29,-40,-41,40,-48,18,-36,40,-56,18,18,-18,-19,-45,-49,40,-35,18,-57,40,40,]),'MINUS':([10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,48,50,52,53,54,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,],[20,41,20,-15,20,20,-20,-21,-22,-23,-24,-25,-26,20,-30,-31,-32,-33,-34,20,-59,-44,20,20,20,-27,20,20,-28,41,41,20,-50,41,20,-58,-59,41,-13,-14,20,-16,20,-17,-39,-42,-29,-40,-41,41,-48,20,-36,41,-56,20,20,-18,-19,-45,-49,41,-35,20,-57,41,41,]),'LPAREN':([10,18,20,21,29,35,37,38,40,41,43,44,50,54,62,64,67,70,73,78,79,86,],[29,29,29,29,29,29,54,29,29,29,29,29,29,29,29,29,54,54,29,29,29,29,]),'STRING':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'BOOL':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'NONE':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'LARRAY':([10,18,20,21,29,33,34,35,37,38,40,41,43,44,50,54,62,64,66,67,69,70,73,75,78,79,82,85,86,],[35,35,35,35,35,50,-43,35,-44,35,35,35,35,35,35,35,35,35,-39,-42,-40,-41,35,-36,35,35,-45,-35,35,]),'ID':([10,18,20,21,29,35,38,40,41,43,44,47,49,50,54,62,64,73,78,79,86,],[37,37,37,37,37,37,37,37,37,37,37,67,70,37,37,37,37,37,37,37,37,]),'LDICT':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'RPAREN':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,45,46,48,52,54,56,60,61,63,65,66,67,68,69,70,72,74,75,76,77,80,81,82,83,85,87,90,],[-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-27,-28,-53,68,-50,75,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,85,-36,-38,-56,-18,-19,-45,-49,-35,-57,-37,]),'RARRAY':([19,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,42,45,46,51,52,53,56,60,61,63,65,66,67,68,69,70,71,72,73,75,77,80,81,82,83,84,85,87,],[-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,52,-59,-44,-27,-28,-53,72,-50,-47,-58,-13,-14,-16,-17,-39,-42,-29,-40,-41,82,-48,83,-36,-56,-18,-19,-45,-49,-46,-35,-57,]),'COMMA':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,45,46,51,52,53,55,56,57,58,60,61,63,65,66,67,68,69,70,72,74,75,76,77,80,81,82,83,84,85,87,88,89,90,],[-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-27,-28,-53,73,-50,-47,78,-58,-52,-54,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,86,-36,-38,-56,-18,-19,-45,-49,-46,-35,-57,-51,-55,-37,]),'COLON':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,45,46,52,56,58,59,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-27,-28,-53,-50,-58,-59,79,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'RDICT':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,38,42,45,46,52,55,56,57,58,60,61,63,65,66,67,68,69,70,72,75,77,78,80,81,82,83,85,87,88,89,],[-15,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,56,-27,-28,-53,-50,77,-58,-52,-54,-13,-14,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,87,-18,-19,-45,-49,-35,-57,-51,-55,]),'TIMES':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,43,45,52,56,58,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[43,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-27,62,-28,-50,-58,-59,43,43,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'DIVIDE':([19,22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,44,45,52,56,58,60,61,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[44,-20,-21,-22,-23,-24,-25,-26,-30,-31,-32,-33,-34,-59,-44,-27,64,-28,-50,-58,-59,44,44,-16,-17,-39,-42,-29,-40,-41,-48,-36,-56,-18,-19,-45,-49,-35,-57,]),'DOT':([22,23,24,25,26,27,28,30,31,32,33,34,36,37,42,45,52,56,58,63,65,66,67,68,69,70,72,75,77,80,81,82,83,85,87,],[47,-21,-22,-23,-24,-25,-26,-30,-31,-32,49,-34,-59,-44,-27,-28,-50,-58,-59,47,47,-39,-42,-29,-40,-41,-48,-36,-56,47,47,-45,-49,-35,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'master':([0,],[1,]),'block':([0,1,3,5,6,12,],[2,4,9,9,16,16,]),'blockcontent':([3,5,],[6,12,]),'attr':([3,5,6,12,],[8,8,15,15,]),'expr':([10,21,29,35,38,50,54,73,78,79,86,],[17,46,48,53,59,71,76,84,59,89,90,]),'term':([10,21,29,35,38,40,41,50,54,73,78,79,86,],[19,19,19,19,19,60,61,19,19,19,19,19,19,]),'factor':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[22,42,45,22,22,22,22,22,22,63,65,22,22,80,81,22,22,22,22,]),'identifier':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'func':([10,18,20,21,29,35,38,40,41,43,44,47,49,50,54,62,64,73,78,79,86,],[34,34,34,34,34,34,34,34,34,34,34,66,69,34,34,34,34,34,34,34,34,]),'dict':([10,18,20,21,29,35,38,40,41,43,44,50,54,62,64,73,78,79,86,],[36,36,36,36,36,36,58,36,36,36,36,36,36,36,36,36,36,36,36,]),'arraydata':([35,],[51,]),'dictdata':([38,],[55,]),'dictcouple':([38,78,],[57,88,]),'funcargs':([54,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> master","S'",1,None,None,None),
  ('master -> master block','master',2,'p_master','parser.py',39),
  ('master -> block','master',1,'p_master','parser.py',40),
  ('block -> CLSS NAME blockcontent END','block',4,'p_block','parser.py',51),
  ('block -> CLSS blockcontent END','block',3,'p_block','parser.py',52),
  ('block -> CLSS NAME END','block',3,'p_block','parser.py',53),
  ('block -> CLSS END','block',2,'p_block','parser.py',54),
  ('blockcontent -> blockcontent attr','blockcontent',2,'p_blockcontent','parser.py',70),
  ('blockcontent -> blockcontent block','blockcontent',2,'p_blockcontent','parser.py',71),
  ('blockcontent -> attr','blockcontent',1,'p_blockcontent','parser.py',72),
  ('blockcontent -> block','blockcontent',1,'p_blockcontent','parser.py',73),
  ('attr -> ATTR expr','attr',2,'p_attrset','parser.py',91),
  ('attr -> BODY','attr',1,'p_attrset','parser.py',92),
  ('expr -> expr PLUS term','expr',3,'p_binops','parser.py',102),
  ('expr -> expr MINUS term','expr',3,'p_binops','parser.py',103),
  ('expr -> term','expr',1,'p_binops','parser.py',104),
  ('term -> term TIMES factor','term',3,'p_binops','parser.py',105),
  ('term -> term DIVIDE factor','term',3,'p_binops','parser.py',106),
  ('term -> term TIMES TIMES factor','term',4,'p_binops','parser.py',107),
  ('term -> term DIVIDE DIVIDE factor','term',4,'p_binops','parser.py',108),
  ('term -> factor','term',1,'p_binops','parser.py',109),
  ('factor -> NUM_INT','factor',1,'p_factor_num','parser.py',124),
  ('factor -> NUM_FLOAT','factor',1,'p_factor_num','parser.py',125),
  ('factor -> NUM_HEX','factor',1,'p_factor_num','parser.py',126),
  ('factor -> NUM_OCT','factor',1,'p_factor_num','parser.py',127),
  ('factor -> NUM_IMAG','factor',1,'p_factor_num','parser.py',128),
  ('factor -> NUM_BIN','factor',1,'p_factor_num','parser.py',129),
  ('factor -> PLUS factor','factor',2,'p_factor_num','parser.py',130),
  ('factor -> MINUS factor','factor',2,'p_factor_num','parser.py',131),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor_paren_expr','parser.py',140),
  ('factor -> STRING','factor',1,'p_factor_str','parser.py',146),
  ('factor -> BOOL','factor',1,'p_factor_bool','parser.py',152),
  ('factor -> NONE','factor',1,'p_factor_none','parser.py',157),
  ('factor -> identifier','factor',1,'p_factor_id','parser.py',163),
  ('factor -> func','factor',1,'p_factor_id','parser.py',164),
  ('func -> ID LPAREN funcargs RPAREN','func',4,'p_func','parser.py',169),
  ('func -> ID LPAREN RPAREN','func',3,'p_func','parser.py',170),
  ('funcargs -> funcargs COMMA expr','funcargs',3,'p_funcargs','parser.py',178),
  ('funcargs -> expr','funcargs',1,'p_funcargs','parser.py',179),
  ('identifier -> factor DOT func','identifier',3,'p_id_func','parser.py',188),
  ('identifier -> identifier DOT func','identifier',3,'p_id_func','parser.py',189),
  ('identifier -> identifier DOT ID','identifier',3,'p_id','parser.py',194),
  ('identifier -> factor DOT ID','identifier',3,'p_id','parser.py',195),
  ('identifier -> func','identifier',1,'p_id','parser.py',196),
  ('identifier -> ID','identifier',1,'p_id','parser.py',197),
  ('identifier -> identifier LARRAY expr RARRAY','identifier',4,'p_id_index','parser.py',212),
  ('arraydata -> arraydata COMMA expr','arraydata',3,'p_arraydata','parser.py',219),
  ('arraydata -> expr','arraydata',1,'p_arraydata','parser.py',220),
  ('factor -> LARRAY arraydata RARRAY','factor',3,'p_factor_arr','parser.py',230),
  ('factor -> LARRAY arraydata COMMA RARRAY','factor',4,'p_factor_arr','parser.py',231),
  ('factor -> LARRAY RARRAY','factor',2,'p_factor_arr','parser.py',232),
  ('dictdata -> dictdata COMMA dictcouple','dictdata',3,'p_dictdata','parser.py',241),
  ('dictdata -> dictcouple','dictdata',1,'p_dictdata','parser.py',242),
  ('expr -> NOT expr','expr',2,'p_not','parser.py',251),
  ('dictdata -> dict','dictdata',1,'p_dict_dictdata','parser.py',256),
  ('dictcouple -> expr COLON expr','dictcouple',3,'p_factor_dictcouple','parser.py',261),
  ('dict -> LDICT dictdata RDICT','dict',3,'p_factor_dict','parser.py',266),
  ('dict -> LDICT dictdata COMMA RDICT','dict',4,'p_factor_dict','parser.py',267),
  ('dict -> LDICT RDICT','dict',2,'p_factor_dict','parser.py',268),
  ('factor -> dict','factor',1,'p_dict','parser.py',273),
]
